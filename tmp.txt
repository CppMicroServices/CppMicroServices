build/glnxa64/Testing/Temporary/LastTest.log:716:[ RUN      ] ServiceRegistryTest.TestUnregisterFix
build/glnxa64/Testing/Temporary/LastTest.log:717:[       OK ] ServiceRegistryTest.TestUnregisterFix (0 ms)
build/glnxa64/Testing/Temporary/LastTest.log:1637:[ RUN      ] ServiceRegistryTest.TestUnregisterFix
build/glnxa64/Testing/Temporary/LastTest.log:1638:[       OK ] ServiceRegistryTest.TestUnregisterFix (22 ms)
build/glnxa64/Testing/Temporary/LastTest.log:2924:[ RUN      ] tGenericDSSuite.TestFallbackUsedAfterUnregister
build/glnxa64/Testing/Temporary/LastTest.log:2925:[       OK ] tGenericDSSuite.TestFallbackUsedAfterUnregister (3 ms)
build/glnxa64/Testing/Temporary/LastTest.log:3525:[ RUN      ] RegistrationManagerTest.VerifyUnregister
build/glnxa64/Testing/Temporary/LastTest.log:3526:[       OK ] RegistrationManagerTest.VerifyUnregister (2 ms)
build/glnxa64/Testing/Temporary/LastTest.log:4140:[ RUN      ] tGenericDSSuite.TestFallbackUsedAfterUnregister
build/glnxa64/Testing/Temporary/LastTest.log:4141:[       OK ] tGenericDSSuite.TestFallbackUsedAfterUnregister (122 ms)
build/glnxa64/Testing/Temporary/LastTest.log:4776:[ RUN      ] RegistrationManagerTest.VerifyUnregister
build/glnxa64/Testing/Temporary/LastTest.log:4777:[       OK ] RegistrationManagerTest.VerifyUnregister (72 ms)
build/glnxa64/Testing/Temporary/LastTest.log:5384:[ RUN      ] tGenericDSAndCASuite.TestFallbackUsedAfterUnregister
build/glnxa64/Testing/Temporary/LastTest.log:5385:[       OK ] tGenericDSAndCASuite.TestFallbackUsedAfterUnregister (5 ms)
build/glnxa64/Testing/Temporary/LastTest.log.tmp:716:[ RUN      ] ServiceRegistryTest.TestUnregisterFix
build/glnxa64/Testing/Temporary/LastTest.log.tmp:717:[       OK ] ServiceRegistryTest.TestUnregisterFix (0 ms)
compendium/test_bundles/EnglishDictionary/src/Activator.cpp:50:            sr.Unregister();
compendium/DeclarativeServices/src/SCRActivator.cpp:104:                scrServiceReg.Unregister();
compendium/DeclarativeServices/src/SCRActivator.cpp:106:                configListenerReg.Unregister();
compendium/DeclarativeServices/src/manager/RegistrationManager.cpp:65:                    serviceReg.Unregister();
compendium/DeclarativeServices/src/manager/RegistrationManager.cpp:129:        RegistrationManager::UnregisterService()
compendium/DeclarativeServices/src/manager/RegistrationManager.cpp:131:            serviceReg.Unregister();
compendium/DeclarativeServices/src/manager/RegistrationManager.hpp:121:            void UnregisterService();
compendium/DeclarativeServices/src/manager/RegistrationManager.hpp:124:            FRIEND_TEST(RegistrationManagerTest, VerifyUnregister);
compendium/DeclarativeServices/src/manager/states/CCActiveState.cpp:108:                    mgr.UnregisterService();
compendium/DeclarativeServices/src/manager/states/CCSatisfiedState.cpp:47:                    mgr.UnregisterService();
compendium/DeclarativeServices/src/manager/ComponentConfigurationImpl.hpp:206:            void UnregisterService();
compendium/DeclarativeServices/src/manager/ConfigurationNotifier.cpp:83:        ConfigurationNotifier::UnregisterListener(std::string const& pid,
compendium/DeclarativeServices/src/manager/ReferenceManagerImpl.cpp:258:        ReferenceManagerBaseImpl::UnregisterListener(cppmicroservices::ListenerTokenId token)
compendium/DeclarativeServices/src/manager/ConfigurationNotifier.hpp:95:            void UnregisterListener(std::string const& pid, const cppmicroservices::ListenerTokenId token) noexcept;
compendium/DeclarativeServices/src/manager/ReferenceManagerImpl.hpp:172:            void UnregisterListener(cppmicroservices::ListenerTokenId token) override;
compendium/DeclarativeServices/src/manager/ComponentConfigurationImpl.cpp:115:                { (kvpair.first)->UnregisterListener(kvpair.second); });
compendium/DeclarativeServices/src/manager/ComponentConfigurationImpl.cpp:125:                configNotifier->UnregisterListener(listener->pid, listener->tokenId);
compendium/DeclarativeServices/src/manager/ComponentConfigurationImpl.cpp:346:        ComponentConfigurationImpl::UnregisterService()
compendium/DeclarativeServices/src/manager/ComponentConfigurationImpl.cpp:350:                regManager->UnregisterService();
compendium/DeclarativeServices/src/manager/ReferenceManager.hpp:137:            virtual void UnregisterListener(cppmicroservices::ListenerTokenId token) = 0;
compendium/DeclarativeServices/test/TestAsyncWorkService.cpp:200:    TEST_F(tGenericDSSuite, TestFallbackUsedAfterUnregister)
compendium/DeclarativeServices/test/TestAsyncWorkService.cpp:223:            reg.Unregister();
compendium/DeclarativeServices/test/TestAsyncWorkService.cpp:293:                            reg1.Unregister();
compendium/DeclarativeServices/test/TestComponentContextImpl.cpp:262:                sReg.Unregister();
compendium/DeclarativeServices/test/TestComponentContextImpl.cpp:385:            ASSERT_NO_THROW(fooServiceReg.Unregister());
compendium/DeclarativeServices/test/TestComponentContextImpl.cpp:427:            ASSERT_NO_THROW(sReg.Unregister());
compendium/DeclarativeServices/test/TestComponentContextImpl.cpp:475:            fooSvcReg.Unregister();
compendium/DeclarativeServices/test/TestComponentContextImpl.cpp:505:            fooSvcReg.Unregister();
compendium/DeclarativeServices/test/TestReferenceManagerImpl.cpp:225:                reg.Unregister();
compendium/DeclarativeServices/test/TestReferenceManagerImpl.cpp:392:                reg.Unregister();
compendium/DeclarativeServices/test/TestReferenceManagerImpl.cpp:428:                reg1.Unregister();
compendium/DeclarativeServices/test/TestReferenceManagerImpl.cpp:449:                reg2.Unregister();
compendium/DeclarativeServices/test/TestReferenceManagerImpl.cpp:475:                refManager.UnregisterListener(token);
compendium/DeclarativeServices/test/TestReferenceManagerImpl.cpp:508:                reg.Unregister();
compendium/DeclarativeServices/test/TestReferenceManagerImpl.cpp:549:                                                            sRegs[i].Unregister();
compendium/DeclarativeServices/test/TestReferenceManagerImpl.cpp:605:                        sReg.Unregister();
compendium/DeclarativeServices/test/TestReferenceManagerImpl.cpp:660:            reg.Unregister();
compendium/DeclarativeServices/test/TestReferenceManagerImpl.cpp:665:            reg.Unregister();
compendium/DeclarativeServices/test/TestReferenceManagerImpl.cpp:674:            reg.Unregister();
compendium/DeclarativeServices/test/TestReferenceManagerImpl.cpp:722:            reg.Unregister();
compendium/DeclarativeServices/test/TestComponentLifecycle.cpp:198:        bool serviceUnregistered = false;
compendium/DeclarativeServices/test/TestComponentLifecycle.cpp:248:                    serviceUnregistered = true;
compendium/DeclarativeServices/test/TestComponentLifecycle.cpp:256:            cv1.wait(lk, [&serviceUnregistered]() { return serviceUnregistered == true; });
compendium/DeclarativeServices/test/SCRLoggerTest.cpp:139:                reg1.Unregister();
compendium/DeclarativeServices/test/SCRLoggerTest.cpp:142:                reg2.Unregister();
compendium/DeclarativeServices/test/SCRLoggerTest.cpp:143:                reg3.Unregister();
compendium/DeclarativeServices/test/SCRLoggerTest.cpp:196:                                reg1.Unregister();
compendium/DeclarativeServices/test/TestBindingPolicies.cpp:143:            char const* verificationMessageAfterUnregister;
compendium/DeclarativeServices/test/TestBindingPolicies.cpp:155:                          << obj.verificationMessageAfterUnregister << "\n"
compendium/DeclarativeServices/test/TestBindingPolicies.cpp:339:            depSvcReg.Unregister();
compendium/DeclarativeServices/test/TestBindingPolicies.cpp:345:                EXPECT_STREQ(param.verificationMessageAfterUnregister, svc->ExtendedDescription().c_str())
compendium/DeclarativeServices/test/TestBindingPolicies.cpp:419:            depSvcReg.Unregister();
compendium/DeclarativeServices/test/TestBindingPolicies.cpp:495:            higherRankedSvc.Unregister();
compendium/DeclarativeServices/test/TestBindingPolicies.cpp:504:            lowerRankedSvc.Unregister();
compendium/DeclarativeServices/test/TestBindingPolicies.cpp:513:            depSvcReg.Unregister();
compendium/DeclarativeServices/test/TestBindingPolicies.cpp:598:            higherRankedSvc.Unregister();
compendium/DeclarativeServices/test/TestBindingPolicies.cpp:607:            lowerRankedSvc.Unregister();
compendium/DeclarativeServices/test/TestBindingPolicies.cpp:616:            depSvcReg.Unregister();
compendium/DeclarativeServices/test/TestBindingPolicies.cpp:692:            depSvcReg.Unregister();
compendium/DeclarativeServices/test/TestBindingPolicies.cpp:701:            higherRankedSvc.Unregister();
compendium/DeclarativeServices/test/TestBindingPolicies.cpp:710:            lowerRankedSvc.Unregister();
compendium/DeclarativeServices/test/TestBindingPolicies.cpp:794:            higherRankedSvc.Unregister();
compendium/DeclarativeServices/test/TestBindingPolicies.cpp:804:            lowerRankedSvc.Unregister();
compendium/DeclarativeServices/test/TestBindingPolicies.cpp:814:            depSvcReg.Unregister();
compendium/DeclarativeServices/test/TestBindingPolicies.cpp:857:                depSvcReg.Unregister();
compendium/DeclarativeServices/test/TestBindingPolicies.cpp:858:                higherRankedSvc.Unregister();
compendium/DeclarativeServices/test/TestBindingPolicies.cpp:859:                lowerRankedSvc.Unregister();
compendium/DeclarativeServices/test/TestRegistrationManager.cpp:142:        TEST_F(RegistrationManagerTest, VerifyUnregister)
compendium/DeclarativeServices/test/TestRegistrationManager.cpp:148:                // Unregister without register
compendium/DeclarativeServices/test/TestRegistrationManager.cpp:150:                EXPECT_THROW({ rm.UnregisterService(); }, std::logic_error)
compendium/DeclarativeServices/test/TestRegistrationManager.cpp:160:                EXPECT_NO_THROW({ rm.UnregisterService(); });
compendium/DeclarativeServices/test/TestRegistrationManager.cpp:161:                EXPECT_FALSE(rm.IsServiceRegistered()) << "state must be UNREGISTERED after call to UnregisterService";
compendium/DeclarativeServices/test/TestRegistrationManager.cpp:164:                EXPECT_THROW({ rm.UnregisterService(); }, std::logic_error)
compendium/DeclarativeServices/test/TestRegistrationManager.cpp:165:                    << "Unregistering an already unregistered service must throw";
compendium/DeclarativeServices/test/Mocks.hpp:228:            MOCK_METHOD1(UnregisterListener, void(cppmicroservices::ListenerTokenId));
compendium/DeclarativeServices/test/Mocks.hpp:252:            MOCK_METHOD1(UnregisterListener, void(cppmicroservices::ListenerTokenId));
compendium/DeclarativeServices/test/TestComponentConfigurationImpl.cpp:306:            reg.Unregister();
compendium/DeclarativeServices/test/TestComponentConfigurationImpl.cpp:904:            svcReg.Unregister();
compendium/DeclarativeServices/test/TestComponentConfigurationImpl.cpp:951:            loggerReg.Unregister();
compendium/DeclarativeServices/test/TestComponentConfigurationImpl.cpp:997:            loggerReg.Unregister();
compendium/DeclarativeServices/test/TestBundleValidation.cpp:129:    Interface1SvcReg.Unregister();
compendium/DeclarativeServices/test/TestBundleValidation.cpp:154:    Interface1SvcReg.Unregister();
compendium/ConfigurationAdmin/src/CMActivator.cpp:72:                configAdminReg.Unregister();
compendium/ConfigurationAdmin/test/TestAsyncWorkService.cpp:265:    TEST_F(tGenericDSAndCASuite, TestFallbackUsedAfterUnregister)
compendium/ConfigurationAdmin/test/TestAsyncWorkService.cpp:288:            reg.Unregister();
compendium/ConfigurationAdmin/test/TestAsyncWorkService.cpp:359:                            reg1.Unregister();
compendium/ConfigurationAdmin/test/TestConfigurationAdminImpl.cpp:522:            reg1.Unregister();
compendium/ConfigurationAdmin/test/TestConfigurationAdminImpl.cpp:523:            reg2.Unregister();
compendium/ConfigurationAdmin/test/TestConfigurationAdminImpl.cpp:524:            reg3.Unregister();
compendium/ConfigurationAdmin/test/TestConfigurationAdminImpl.cpp:662:            reg1.Unregister();
compendium/ConfigurationAdmin/test/TestConfigurationAdminImpl.cpp:663:            reg2.Unregister();
compendium/ConfigurationAdmin/test/TestConfigurationAdminImpl.cpp:664:            reg3.Unregister();
compendium/ConfigurationAdmin/test/TestConfigurationAdminImpl.cpp:762:            reg1.Unregister();
compendium/ConfigurationAdmin/test/TestConfigurationAdminImpl.cpp:763:            reg2.Unregister();
compendium/ConfigurationAdmin/test/TestConfigurationAdminImpl.cpp:764:            reg3.Unregister();
compendium/ConfigurationAdmin/test/TestConfigurationAdminImpl.cpp:765:            reg4.Unregister();
compendium/ConfigurationAdmin/test/TestConfigurationAdminImpl.cpp:878:            reg1.Unregister();
compendium/ConfigurationAdmin/test/TestConfigurationAdminImpl.cpp:879:            reg2.Unregister();
compendium/ConfigurationAdmin/test/TestConfigurationAdminImpl.cpp:1063:            reg1.Unregister();
compendium/ConfigurationAdmin/test/TestConfigurationAdminImpl.cpp:1064:            reg2.Unregister();
compendium/ConfigurationAdmin/test/TestCMLogger.cpp:118:                reg.Unregister();
compendium/ConfigurationAdmin/test/TestCMLogger.cpp:141:                reg1.Unregister();
compendium/ConfigurationAdmin/test/TestCMLogger.cpp:144:                reg2.Unregister();
compendium/ConfigurationAdmin/test/TestCMLogger.cpp:145:                reg3.Unregister();
compendium/ConfigurationAdmin/test/TestCMLogger.cpp:196:                                         reg1.Unregister();
third_party/googletest/googlemock/include/gmock/gmock-spec-builders.h:446:  static void UnregisterCallReaction(const void* mock_obj)
third_party/googletest/googlemock/include/gmock/gmock-spec-builders.h:478:  // Unregisters a mock method; removes the owning mock object from
third_party/googletest/googlemock/include/gmock/gmock-spec-builders.h:482:  static void UnregisterLocked(internal::UntypedFunctionMockerBase* mocker)
third_party/googletest/googlemock/include/gmock/gmock-spec-builders.h:1489:    Mock::UnregisterLocked(this);
third_party/googletest/googlemock/include/gmock/gmock-nice-strict.h:112:  ~NiceMockImpl() { ::testing::Mock::UnregisterCallReaction(this); }
third_party/googletest/googlemock/include/gmock/gmock-nice-strict.h:120:  ~NaggyMockImpl() { ::testing::Mock::UnregisterCallReaction(this); }
third_party/googletest/googlemock/include/gmock/gmock-nice-strict.h:128:  ~StrictMockImpl() { ::testing::Mock::UnregisterCallReaction(this); }
third_party/googletest/googlemock/src/gmock-spec-builders.cc:707:void Mock::UnregisterCallReaction(const void* mock_obj)
third_party/googletest/googlemock/src/gmock-spec-builders.cc:820:// Unregisters a mock method; removes the owning mock object from the
third_party/googletest/googlemock/src/gmock-spec-builders.cc:824:void Mock::UnregisterLocked(internal::UntypedFunctionMockerBase* mocker)
third_party/boost/include/boost/asio/detail/impl/win_object_handle_service.ipp:100:  // We must not hold the lock while calling UnregisterWaitEx. This is because
third_party/boost/include/boost/asio/detail/impl/win_object_handle_service.ipp:102:  // UnregisterWaitEx to complete.
third_party/boost/include/boost/asio/detail/impl/win_object_handle_service.ipp:106:    ::UnregisterWaitEx(impl.wait_handle_, INVALID_HANDLE_VALUE);
third_party/boost/include/boost/asio/detail/impl/win_object_handle_service.ipp:152:  // We must not hold the lock while calling UnregisterWaitEx. This is because
third_party/boost/include/boost/asio/detail/impl/win_object_handle_service.ipp:154:  // UnregisterWaitEx to complete.
third_party/boost/include/boost/asio/detail/impl/win_object_handle_service.ipp:158:    ::UnregisterWaitEx(impl.wait_handle_, INVALID_HANDLE_VALUE);
third_party/boost/include/boost/asio/detail/impl/win_object_handle_service.ipp:195:    // We must not hold the lock while calling UnregisterWaitEx. This is
third_party/boost/include/boost/asio/detail/impl/win_object_handle_service.ipp:197:    // waiting for UnregisterWaitEx to complete.
third_party/boost/include/boost/asio/detail/impl/win_object_handle_service.ipp:201:      ::UnregisterWaitEx(wait_handle, INVALID_HANDLE_VALUE);
third_party/boost/include/boost/asio/detail/impl/win_object_handle_service.ipp:247:    // We must not hold the lock while calling UnregisterWaitEx. This is
third_party/boost/include/boost/asio/detail/impl/win_object_handle_service.ipp:249:    // waiting for UnregisterWaitEx to complete.
third_party/boost/include/boost/asio/detail/impl/win_object_handle_service.ipp:253:      ::UnregisterWaitEx(wait_handle, INVALID_HANDLE_VALUE);
third_party/boost/include/boost/asio/detail/impl/win_object_handle_service.ipp:299:    // We must not hold the lock while calling UnregisterWaitEx. This is
third_party/boost/include/boost/asio/detail/impl/win_object_handle_service.ipp:301:    // waiting for UnregisterWaitEx to complete.
third_party/boost/include/boost/asio/detail/impl/win_object_handle_service.ipp:305:      ::UnregisterWaitEx(wait_handle, INVALID_HANDLE_VALUE);
third_party/boost/include/boost/asio/detail/impl/win_object_handle_service.ipp:405:    ::UnregisterWaitEx(impl->wait_handle_, NULL);
third_party/boost/include/boost/winapi/thread_pool.hpp:45:UnregisterWait(boost::winapi::HANDLE_ WaitHandle);
third_party/boost/include/boost/winapi/thread_pool.hpp:50:UnregisterWaitEx(
third_party/boost/include/boost/winapi/thread_pool.hpp:65:using ::UnregisterWait;
third_party/boost/include/boost/winapi/thread_pool.hpp:69:using ::UnregisterWaitEx;
webconsole/include/cppmicroservices/webconsole/SimpleWebConsolePlugin.h:79:         * forget to call #Unregister() when the plugin is no longer
webconsole/include/cppmicroservices/webconsole/SimpleWebConsolePlugin.h:91:        void Unregister();
webconsole/src/SimpleWebConsolePlugin.cpp:94:    SimpleWebConsolePlugin::Unregister()
webconsole/src/SimpleWebConsolePlugin.cpp:98:            m_Reg.Unregister();
doc/src/tutorial/spellcheckservice/Activator.cpp:187:                m_spellCheckReg.Unregister();
framework/include/cppmicroservices/ServiceTrackerCustomizer.h:50:     * <code>ServiceRegistration::Unregister</code>) a service while being
framework/include/cppmicroservices/ServiceEvent.h:98:             * @see ServiceRegistration#Unregister
framework/include/cppmicroservices/ServiceRegistrationBase.h:134:         * Unregisters a service. Remove a <code>ServiceRegistrationBase</code> object
framework/include/cppmicroservices/ServiceRegistrationBase.h:162:        void Unregister();
framework/include/cppmicroservices/Framework.h:187:         * -# Unregister all services registered by this Framework.
framework/src/service/ServiceRegistrationBase.cpp:76:        //     Unregister();
framework/src/service/ServiceRegistrationBase.cpp:195:    ServiceRegistrationBase::Unregister()
framework/src/service/ServiceRegistrationBase.cpp:208:        bool isUnregistering(false); // expected state
framework/src/service/ServiceRegistrationBase.cpp:209:        if (atomic_compare_exchange_strong(&d->unregistering, &isUnregistering, true))
framework/src/service/ServiceRegistrationBase.cpp:222:        if (isUnregistering)
framework/src/bundle/BundlePrivate.cpp:812:                sr.Unregister();
framework/test/bench/ServiceRegistryTest.cpp:177:BENCHMARK_DEFINE_F(ServiceRegistryFixture, UnregisterServices)
framework/test/bench/ServiceRegistryTest.cpp:197:            reg.Unregister();
framework/test/bench/ServiceRegistryTest.cpp:207:BENCHMARK_REGISTER_F(ServiceRegistryFixture, UnregisterServices)
framework/test/bundles/libLQ/TestBundleLQ.cpp:59:            sr.Unregister();
framework/test/bundles/libH/TestBundleH.cpp:301:            factoryService.Unregister();
framework/test/bundles/libH/TestBundleH.cpp:302:            factoryServiceReturningNullPtr.Unregister();
framework/test/bundles/libH/TestBundleH.cpp:303:            factoryServiceReturningWrongInterface.Unregister();
framework/test/bundles/libH/TestBundleH.cpp:304:            factoryServiceThrowFromGetService.Unregister();
framework/test/bundles/libH/TestBundleH.cpp:305:            factoryServiceThrowFromUngetService.Unregister();
framework/test/bundles/libH/TestBundleH.cpp:306:            prototypeFactoryService.Unregister();
framework/test/bundles/libA2/TestBundleA2.cpp:54:            sr.Unregister();
framework/test/bundles/libBA_01/TestBundleBA_01.cpp:56:            sr.Unregister();
framework/test/bundles/libADuplicate/TestBundleA.cpp:57:            sr.Unregister();
framework/test/bundles/libBA_X1/TestBundleBA_X1.cpp:56:            sr.Unregister();
framework/test/bundles/libC1/TestBundleC1.cpp:137:                        reg.Unregister();
framework/test/bundles/libC1/TestBundleC1.cpp:176:                additionalReg.v.Unregister();
framework/test/bundles/libA/TestBundleA.cpp:57:            sr.Unregister();
framework/test/bundles/libBA_S1/TestBundleBA_S1.cpp:56:            sr.Unregister();
framework/test/bundles/libBWithStatic/TestBundleB.cpp:57:            sr.Unregister();
framework/test/bundles/libBWithStatic/TestBundleImportedByB.cpp:56:            sr.Unregister();
framework/test/bundles/libS/TestBundleS.cpp:85:                        sr1.Unregister();
framework/test/bundles/libS/TestBundleS.cpp:121:                sreg.Unregister();
framework/test/bundles/libS/TestBundleS.cpp:125:                sciReg.Unregister();
framework/test/gtest/ServiceObjectsTest.cpp:66:    reg1.Unregister();
framework/test/gtest/FrameworkTest.cpp:816:    loggerReg.Unregister();
framework/test/gtest/ServiceTrackerTest.cpp:375:    svcReg.Unregister();
framework/test/gtest/ServiceRegistryTest.cpp:98:    reg2.Unregister();
framework/test/gtest/ServiceRegistryTest.cpp:103:    reg1.Unregister();
framework/test/gtest/ServiceRegistryTest.cpp:112:TEST_F(ServiceRegistryTest, TestUnregisterFix)
framework/test/gtest/ServiceRegistryTest.cpp:116:    registration.Unregister();
framework/test/gtest/ServiceRegistryTest.cpp:156:    reg1.Unregister();
framework/test/gtest/ServiceRegistryTest.cpp:199:    reg1.Unregister();
framework/test/gtest/ServiceRegistryTest.cpp:205:    reg2.Unregister();
framework/test/gtest/ServiceTemplateTest.cpp:234:    sr1.Unregister();
framework/test/gtest/ServiceTemplateTest.cpp:235:    sr2.Unregister();
framework/test/gtest/ServiceTemplateTest.cpp:236:    sr3.Unregister();
framework/test/gtest/BundleHooksTest.cpp:177:    findHookReg.Unregister();
framework/test/gtest/BundleHooksTest.cpp:224:    eventHookReg.Unregister();
framework/test/gtest/BundleHooksTest.cpp:259:    eventHookReg.Unregister();
framework/test/gtest/BundleHooksTest.cpp:300:    eventHookReg.Unregister();
framework/test/gtest/ServiceHooksTest.cpp:382:    listenerHookReg2.Unregister();
framework/test/gtest/ServiceHooksTest.cpp:383:    listenerHookReg1.Unregister();
framework/test/gtest/ServiceHooksTest.cpp:428:    findHookReg2.Unregister();
framework/test/gtest/ServiceHooksTest.cpp:429:    findHookReg1.Unregister();
framework/test/gtest/ServiceHooksTest.cpp:492:    eventListenerHookReg2.Unregister();
framework/test/gtest/ServiceHooksTest.cpp:493:    eventListenerHookReg1.Unregister();
framework/test/gtest/ServiceHooksTest.cpp:533:    findHookReg.Unregister();
framework/test/gtest/ServiceHooksTest.cpp:568:    eventListenerHookReg.Unregister();
framework/test/gtest/ServiceHooksTest.cpp:601:    listenerHookReg.Unregister();
framework/doc/snippets/uServices-singleton/main.cpp:45:        m_SingletonOneReg.Unregister();
framework/doc/snippets/uServices-singleton/main.cpp:52:        m_SingletonTwoReg.Unregister();
