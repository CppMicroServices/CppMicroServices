diff --git a/third_party/absl/base/internal/raw_logging.cc b/third_party/absl/base/internal/raw_logging.cc
index 878fe6c6..4bf4e166 100644
--- a/third_party/absl/base/internal/raw_logging.cc
+++ b/third_party/absl/base/internal/raw_logging.cc
@@ -67,6 +67,17 @@
 #undef ABSL_HAVE_RAW_IO
 #endif
 
+#ifdef _MSC_VER
+#  pragma warning(push)
+#  pragma warning(disable : 4267)
+#elif __GNUC__
+#  pragma GCC diagnostic push
+#  pragma GCC diagnostic ignored "-Werror"
+#elif __clang__
+#  pragma clang diagnostic push
+#  pragma clang diagnostic ignored "-Werror"
+#endif
+
 // TODO(gfalcon): We want raw-logging to work on as many platforms as possible.
 // Explicitly #error out when not ABSL_LOW_LEVEL_WRITE_SUPPORTED, except for a
 // whitelisted set of platforms for which we expect not to be able to raw log.
@@ -233,3 +244,11 @@ void RegisterInternalLogFunction(InternalLogFunction func) {
 
 }  // namespace raw_logging_internal
 }  // namespace absl
+
+#ifdef _MSC_VER
+#  pragma warning(pop)
+#elif __GNUC__
+#  pragma GCC diagnostic pop
+#elif __clang__
+#  pragma clang diagnostic pop
+#endif
\ No newline at end of file
diff --git a/third_party/absl/strings/charconv.cc b/third_party/absl/strings/charconv.cc
index bc07e7ab..dd918fed 100644
--- a/third_party/absl/strings/charconv.cc
+++ b/third_party/absl/strings/charconv.cc
@@ -56,6 +56,17 @@
 // end result normally has the 53rd bit set.  It represents subnormals by using
 // narrower mantissas.
 
+#ifdef _MSC_VER
+#  pragma warning(push)
+#  pragma warning(disable : 4244)
+#elif __GNUC__
+#  pragma GCC diagnostic push
+#  pragma GCC diagnostic ignored "-Werror"
+#elif __clang__
+#  pragma clang diagnostic push
+#  pragma clang diagnostic ignored "-Werror"
+#endif
+
 namespace absl {
 namespace {
 
@@ -981,3 +992,11 @@ const int16_t kPower10ExponentTable[] = {
 
 }  // namespace
 }  // namespace absl
+
+#ifdef _MSC_VER
+#  pragma warning(pop)
+#elif __GNUC__
+#  pragma GCC diagnostic pop
+#elif __clang__
+#  pragma clang diagnostic pop
+#endif
\ No newline at end of file
diff --git a/third_party/absl/strings/internal/charconv_bigint.cc b/third_party/absl/strings/internal/charconv_bigint.cc
index 95d471d9..979aba8c 100644
--- a/third_party/absl/strings/internal/charconv_bigint.cc
+++ b/third_party/absl/strings/internal/charconv_bigint.cc
@@ -18,6 +18,17 @@
 #include <cassert>
 #include <string>
 
+#ifdef _MSC_VER
+#  pragma warning(push)
+#  pragma warning(disable : 4244)
+#elif __GNUC__
+#  pragma GCC diagnostic push
+#  pragma GCC diagnostic ignored "-Werror"
+#elif __clang__
+#  pragma clang diagnostic push
+#  pragma clang diagnostic ignored "-Werror"
+#endif
+
 namespace absl {
 namespace strings_internal {
 
@@ -355,3 +366,11 @@ template class BigUnsigned<84>;
 
 }  // namespace strings_internal
 }  // namespace absl
+
+#ifdef _MSC_VER
+#  pragma warning(pop)
+#elif __GNUC__
+#  pragma GCC diagnostic pop
+#elif __clang__
+#  pragma clang diagnostic pop
+#endif
\ No newline at end of file
diff --git a/third_party/absl/strings/internal/charconv_parse.cc b/third_party/absl/strings/internal/charconv_parse.cc
index f3c72324..9961c212 100644
--- a/third_party/absl/strings/internal/charconv_parse.cc
+++ b/third_party/absl/strings/internal/charconv_parse.cc
@@ -21,6 +21,17 @@
 
 #include "absl/strings/internal/memutil.h"
 
+#ifdef _MSC_VER
+#  pragma warning(push)
+#  pragma warning(disable : 4267)
+#elif __GNUC__
+#  pragma GCC diagnostic push
+#  pragma GCC diagnostic ignored "-Werror"
+#elif __clang__
+#  pragma clang diagnostic push
+#  pragma clang diagnostic ignored "-Werror"
+#endif
+
 namespace absl {
 namespace {
 
@@ -494,3 +505,11 @@ template ParsedFloat ParseFloat<16>(const char* begin, const char* end,
 
 }  // namespace strings_internal
 }  // namespace absl
+
+#ifdef _MSC_VER
+#  pragma warning(pop)
+#elif __GNUC__
+#  pragma GCC diagnostic pop
+#elif __clang__
+#  pragma clang diagnostic pop
+#endif
\ No newline at end of file
diff --git a/third_party/absl/strings/numbers.cc b/third_party/absl/strings/numbers.cc
index 38d14869..15a89de8 100644
--- a/third_party/absl/strings/numbers.cc
+++ b/third_party/absl/strings/numbers.cc
@@ -38,6 +38,17 @@
 #include "absl/strings/match.h"
 #include "absl/strings/str_cat.h"
 
+#ifdef _MSC_VER
+#  pragma warning(push)
+#  pragma warning(disable : 4244 4996)
+#elif __GNUC__
+#  pragma GCC diagnostic push
+#  pragma GCC diagnostic ignored "-Werror"
+#elif __clang__
+#  pragma clang diagnostic push
+#  pragma clang diagnostic ignored "-Werror"
+#endif
+
 namespace absl {
 
 bool SimpleAtof(absl::string_view str, float* out) {
@@ -903,3 +914,11 @@ bool safe_strtou64_base(absl::string_view text, uint64_t* value, int base) {
 }  // namespace numbers_internal
 
 }  // namespace absl
+
+#ifdef _MSC_VER
+#  pragma warning(pop)
+#elif __GNUC__
+#  pragma GCC diagnostic pop
+#elif __clang__
+#  pragma clang diagnostic pop
+#endif
\ No newline at end of file
diff --git a/third_party/absl/strings/str_cat.cc b/third_party/absl/strings/str_cat.cc
index 99619445..37054d1f 100644
--- a/third_party/absl/strings/str_cat.cc
+++ b/third_party/absl/strings/str_cat.cc
@@ -22,6 +22,17 @@
 #include "absl/strings/ascii.h"
 #include "absl/strings/internal/resize_uninitialized.h"
 
+#ifdef _MSC_VER
+#  pragma warning(push)
+#  pragma warning(disable : 4616 244)
+#elif __GNUC__
+#  pragma GCC diagnostic push
+#  pragma GCC diagnostic ignored "-Werror"
+#elif __clang__
+#  pragma clang diagnostic push
+#  pragma clang diagnostic ignored "-Werror"
+#endif
+
 namespace absl {
 
 AlphaNum::AlphaNum(Hex hex) {
@@ -243,3 +254,11 @@ void StrAppend(std::string* dest, const AlphaNum& a, const AlphaNum& b,
 }
 
 }  // namespace absl
+
+#ifdef _MSC_VER
+#  pragma warning(pop)
+#elif __GNUC__
+#  pragma GCC diagnostic pop
+#elif __clang__
+#  pragma clang diagnostic pop
+#endif